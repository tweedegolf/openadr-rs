/*
 * OpenADR 3 API
 *
 * The OpenADR 3 API supports energy retailer to energy customer Demand Response programs. The API includes the following capabilities and operations:  __Manage programs:__  * Create/Update/Delete a program * Search programs  __Manage events:__  * Create/Update/Delete an event * Search events  __Manage reports:__  * Create/Update/Delete a report * Search reports  __Manage subscriptions:__  * Create/Update/Delete subscriptions to programs, events, and reports * Search subscriptions * Subscriptions allows clients to register a callback URL (webhook) to be notified   on the change of state of a resource  __Manage vens:__  * Create/Update/Delete vens and ven resources * Search ven and ven resources  __Manage tokens:__  * Obtain an access token * This endpoint is provided as a convenience and may be neglected in a commercial implementation 
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: frank@pajaritotech.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use crate::generated::models::ValuesMapValuesInner;

/// ValuesMap : Represents one or more values associated with a type. E.g. a type of PRICE contains a single float value.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ValuesMap {
    /// Enumerated or private string signifying the nature of values. E.G. \"PRICE\" indicates value is to be interpreted as a currency. 
    #[serde(rename = "type")]
    pub r#type: String,
    /// A list of data points. Most often a singular value such as a price.
    #[serde(rename = "values")]
    pub values: Vec<ValuesMapValuesInner>,
}

impl ValuesMap {
    /// Represents one or more values associated with a type. E.g. a type of PRICE contains a single float value. 
    pub fn new(r#type: String, values: Vec<ValuesMapValuesInner>) -> ValuesMap {
        ValuesMap {
            r#type,
            values,
        }
    }
}


