/*
 * OpenADR 3 API
 *
 * The OpenADR 3 API supports energy retailer to energy customer Demand Response programs. The API includes the following capabilities and operations:  __Manage programs:__  * Create/Update/Delete a program * Search programs  __Manage events:__  * Create/Update/Delete an event * Search events  __Manage reports:__  * Create/Update/Delete a report * Search reports  __Manage subscriptions:__  * Create/Update/Delete subscriptions to programs, events, and reports * Search subscriptions * Subscriptions allows clients to register a callback URL (webhook) to be notified   on the change of state of a resource  __Manage vens:__  * Create/Update/Delete vens and ven resources * Search ven and ven resources  __Manage tokens:__  * Obtain an access token * This endpoint is provided as a convenience and may be neglected in a commercial implementation 
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: frank@pajaritotech.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use super::{IntervalPeriod, Interval};

/// ReportResourcesInner : Report data associated with a resource.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ReportResourcesInner {
    /// User generated identifier. A value of AGGREGATED_REPORT indicates an aggregation of more that one resource's data
    #[serde(rename = "resourceName")]
    pub resource_name: String,
    #[serde(rename = "intervalPeriod", skip_serializing_if = "Option::is_none")]
    pub interval_period: Option<Box<IntervalPeriod>>,
    /// A list of interval objects.
    #[serde(rename = "intervals")]
    pub intervals: Vec<Interval>,
}

impl ReportResourcesInner {
    /// Report data associated with a resource.
    pub fn new(resource_name: String, intervals: Vec<Interval>) -> ReportResourcesInner {
        ReportResourcesInner {
            resource_name,
            interval_period: None,
            intervals,
        }
    }
}


